downlod ubuntu server iso (ubuntu 14.04)
create 64bits machine on Virtualbox
put the iso as virtual DVD
configure 2nd NIC to be host-only 
on boot - choose F4 (mode) minimal virtual machine
choose hostname to be sdntcp
create a user (sudoer) and password, do not encrypt home
install the minimum system (linux 3.13)
no automatic updates
no software to install
install grub loader
boot

========================================= BASIC PACKAGES
sudo apt-get update 
sudo apt-get upgrade
sudo apt-get install iproute ubuntu-extras-keyring vim zip
sudo apt-get install ntp openssh-server rsync colordiff pwgen mlocate
sudo updatedb
sudo ifconfig eth1 up
sudo dhclient eth1
copy github keys to virtual machine (scp .ssh/id* cesar@192.168.56.102:.)
(if macos - sudo dpkg-reconfigure keyboard-configuration)

========================================= MININET
sudo apt-get install git
git clone git://github.com/mininet/mininet.git
mininet/util/install.sh -a 
(install OpenFlow, POX, WireShark, oflops, oftest, loxigen)

========================================= WIRESHARK 1.12 (OpenFlow 1.3)
sudo apt-get build-dep wireshark
sudo apt-get install qt4-default
cd ~
wget https://www.wireshark.org/download/src/all-versions/wireshark-1.12.1.tar.bz2
tar -xjvf wireshark-1.12.1.tar.bz2
cd wireshark-1.12.1/
./configure
make
sudo make install
sudo ldconfig
wireshark

(some validation that it is working)
wget https://dl.dropboxusercontent.com/u/8102772/of13_capture.pcapng
tshark -G fields | grep -i openflow
tshark -G protocols | grep -i openflow
tshark -d tcp.port==6633,openflow -r file.pcapng

========================================== OF13SOFTSWITCH (OpenFlow Sw 1.3)
sudo apt-get install cmake libpcap-dev libxerces-c2-dev libpcre3-dev flex bison pkg-config autoconf libtool libboost-dev
wget http://www.nbee.org/download/nbeesrc-jan-10-2013.zip

(Unfortunatelly need to downgrade bison to compile correctly, in Ubuntu 14.04)
wget -nc http://de.archive.ubuntu.com/ubuntu/pool/main/b/bison/bison_2.5.dfsg-2.1_amd64.deb
wget -nc http://de.archive.ubuntu.com/ubuntu/pool/main/b/bison/libbison-dev_2.5.dfsg-2.1_amd64.deb
sudo dpkg -i bison_2.5.dfsg-2.1_amd64.deb libbison-dev_2.5.dfsg-2.1_amd64.deb

(compile nbee)
cd nbeesrc/src
cmake .
make
sudo cp ../bin/libn*.so /usr/local/lib
sudo ldconfig
sudo cp -R ../include/* /usr/include/

(compile ofsoftswitch13)
git clone https://github.com/CPqD/ofsoftswitch13.git
cd ~/of13softswitch
./boot.sh
./configure
make
sudo make install

(some validation that it is working)
sudo mn --topo single,2 --mac --switch user --controller remote
sudo dpctl unix:/tmp/s1 stats-flow table=0
sudo dpctl  unix:/tmp/s1 flow-mod table=0,cmd=add eth_type=0x86dd,ipv6_src=2001:0db8:85a3:0042:0000:8a2e:0370:7334 apply:output=2
sudo dpctl  unix:/tmp/s1 flow-mod table=0,cmd=add in_port=1,eth_type=0x800 apply:set_field=ip_src:192.168.0.1
sudo dpctl  unix:/tmp/s1 group-mod cmd=add,group=1,type=all
sudo dpctl unix:/tmp/s1 flow-mod table=0,cmd=add eth_type=0x800,eth_src=00:01:02:03:04:05 apply:group=1
sudo dpctl unix:/tmp/s1 meter-mod cmd=add,flags=1,meter=1 drop:rate=10000
sudo dpctl unix:/tmp/s1 flow-mod table=0,cmd=add in_port=1 meter:1 apply:output=2
sudo dpctl  unix:/tmp/s1 flow-mod table=0,cmd=add in_port=1 apply:output=2
sudo dpctl  unix:/tmp/s1 flow-mod table=0,cmd=add in_port=2 apply:output=1

========================================== RYU
sudo apt-get install python-pip python-dev build-essential
sudo apt-get install libxml2-dev libxslt1-dev
git clone git://github.com/osrg/ryu.git
(copy the file simple_switch_13_qos.py before installing)
cd ryu; sudo python ./setup.py install
sudo easy_install --upgrade greenlet
sudo easy_install --upgrade six
(if still doesnt work try - # sudo pip install ryu --upgrade)
sudo apt-get install python-virtualenv

========================================== RUN UNICAMP QOS EXPERIMENT
ruy-manager --verbose ~/ryu/ryu/app/simple_switch_13_qos.py
sudo mn --switch user --mac --custom ~/mininet/custom/topo-2sw-3host.py --topo=mytopo --controller remote
(from mininet console) pingall

